{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-dlaas-datafactory"
		},
		"az_blob_strg_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_blob_strg'"
		},
		"az_synp_sqlls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_synp_sqlls'"
		},
		"oncsvfileuploaded_properties_ingestdata-pipe_parameters_pipelinefilename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"oncsvfileuploaded_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/2a3390b4-6a54-48b5-812a-35320c2fab9c/resourceGroups/dev-dlaas-rg/providers/Microsoft.Storage/storageAccounts/devdlaasstorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/az_blob_strg')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('az_blob_strg_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_synp_sqlls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('az_synp_sqlls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_syna_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_synp_sqlls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "carrier",
						"type": "nvarchar"
					},
					{
						"name": "carrier_name",
						"type": "nvarchar"
					},
					{
						"name": "airport",
						"type": "nvarchar"
					},
					{
						"name": "airport_name",
						"type": "nvarchar"
					},
					{
						"name": "arr_flights",
						"type": "int",
						"precision": 10
					},
					{
						"name": "arr_del15",
						"type": "int",
						"precision": 10
					},
					{
						"name": "carrier_ct",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "weather_ct",
						"type": "decimal",
						"precision": 3,
						"scale": 2
					},
					{
						"name": "nas_ct",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "security_ct",
						"type": "decimal",
						"precision": 3,
						"scale": 2
					},
					{
						"name": "late_aircraft_ct",
						"type": "decimal",
						"precision": 4,
						"scale": 2
					},
					{
						"name": "arr_cancelled",
						"type": "int",
						"precision": 10
					},
					{
						"name": "arr_diverted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "arr_delay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "carrier_delay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "weather_delay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nas_delay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "security_delay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "late_aircraft_delay",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "airlinedata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_synp_sqlls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvdelimit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_blob_strg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "submissions"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_blob_strg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/movecsvtosqldw')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csvdelimit",
								"type": "DatasetReference"
							},
							"name": "srccsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_syna_sql_ds",
								"type": "DatasetReference"
							},
							"name": "destsqldw"
						}
					],
					"transformations": [
						{
							"name": "assignvaluetonull"
						}
					],
					"script": "parameters{\n\tfilename as string\n}\nsource(output(\n\t\tyear as short,\n\t\t{ month} as short,\n\t\tcarrier as string,\n\t\tcarrier_name as string,\n\t\tairport as string,\n\t\tairport_name as string,\n\t\tarr_flights as short,\n\t\tarr_del15 as short,\n\t\tcarrier_ct as double,\n\t\t{ weather_ct} as double,\n\t\tnas_ct as double,\n\t\tsecurity_ct as double,\n\t\tlate_aircraft_ct as double,\n\t\tarr_cancelled as short,\n\t\tarr_diverted as short,\n\t\t{ arr_delay} as short,\n\t\t{ carrier_delay} as short,\n\t\tweather_delay as short,\n\t\tnas_delay as short,\n\t\tsecurity_delay as short,\n\t\tlate_aircraft_delay as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:[($filename)]) ~> srccsv\nsrccsv derive(arr_del15 = iif(isNull(arr_del15),toInteger(1000),toInteger(arr_del15))) ~> assignvaluetonull\nassignvaluetonull sink(input(\n\t\tyear as integer,\n\t\tmonth as integer,\n\t\tcarrier as string,\n\t\tcarrier_name as string,\n\t\tairport as string,\n\t\tairport_name as string,\n\t\tarr_flights as integer,\n\t\tarr_del15 as integer,\n\t\tcarrier_ct as decimal(5,2),\n\t\tweather_ct as decimal(3,2),\n\t\tnas_ct as decimal(5,2),\n\t\tsecurity_ct as decimal(3,2),\n\t\tlate_aircraft_ct as decimal(4,2),\n\t\tarr_cancelled as integer,\n\t\tarr_diverted as integer,\n\t\tarr_delay as integer,\n\t\tcarrier_delay as integer,\n\t\tweather_delay as integer,\n\t\tnas_delay as integer,\n\t\tsecurity_delay as integer,\n\t\tlate_aircraft_delay as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tbatchSize: 20000,\n\tmapColumn(\n\t\tyear,\n\t\tmonth = { month},\n\t\tcarrier,\n\t\tcarrier_name,\n\t\tairport,\n\t\tairport_name,\n\t\tarr_flights,\n\t\tarr_del15,\n\t\tcarrier_ct,\n\t\tweather_ct = { weather_ct},\n\t\tnas_ct,\n\t\tsecurity_ct,\n\t\tlate_aircraft_ct,\n\t\tarr_cancelled,\n\t\tarr_diverted,\n\t\tarr_delay = { arr_delay},\n\t\tcarrier_delay = { carrier_delay},\n\t\tweather_delay,\n\t\tnas_delay,\n\t\tsecurity_delay,\n\t\tlate_aircraft_delay\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> destsqldw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvdelimit')]",
				"[concat(variables('factoryId'), '/datasets/az_syna_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestdata-pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ingestdatadataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "movecsvtosqldw",
								"type": "DataFlowReference",
								"parameters": {
									"filename": {
										"value": "'@{pipeline().parameters.pipelinefilename}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"srccsv": {},
									"destsqldw": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "az_blob_strg",
									"type": "LinkedServiceReference"
								},
								"folderPath": "publisheddata"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"pipelinefilename": {
						"type": "string",
						"defaultValue": "air.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/movecsvtosqldw')]",
				"[concat(variables('factoryId'), '/linkedServices/az_blob_strg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oncsvfileuploaded')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ingestdata-pipe",
							"type": "PipelineReference"
						},
						"parameters": {
							"pipelinefilename": "[parameters('oncsvfileuploaded_properties_ingestdata-pipe_parameters_pipelinefilename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/submissions/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('oncsvfileuploaded_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestdata-pipe')]"
			]
		}
	]
}